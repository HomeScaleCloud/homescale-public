name: "Deploy"
permissions:
  contents: read
  id-token: write
  pull-requests: write

on:
  workflow_call:
    secrets:
      op_service_account_token:
        required: true

concurrency:
  group: deploy

jobs:
  deploy-terraform:
    name: "Deploy - Terraform"
    environment: terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infra/terraform
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      TF_VAR_op_service_account_token: ${{ secrets.op_service_account_token }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Import Secrets
        uses: 1password/load-secrets-action@13f58eec611f8e5db52ec16247f58c508398f3e6 # v3.0.0
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.op_service_account_token }}
          TF_TOKEN_app_terraform_io: op://github-actions/terraform-cloud/credential
          TS_ID: op://github-actions/tailscale/username
          TS_SECRET: op://github-actions/tailscale/password  # pragma: allowlist secret
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
      - name: Initialize
        id: init
        run: terraform init
      - name: Validate
        id: validate
        run: terraform validate
      - name: Connect to Tailscale
        uses: tailscale/github-action@6cae46e2d796f265265cfcf628b72a32b4d7cade #v3
        with:
          oauth-client-id: $TS_ID
          oauth-secret: $TS_SECRET
          tags: tag:github-actions
      - name: Plan
        id: plan
        run: terraform plan -out=tfplan
      - name: Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
